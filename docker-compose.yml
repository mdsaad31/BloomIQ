version: '3.8'

services:
  # Node.js Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - PYTHON_SERVICE_URL=http://python-service:8000
      - WEATHER_API_KEY=${WEATHER_API_KEY}
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/database.sqlite:/app/database.sqlite
    depends_on:
      - python-service
    restart: unless-stopped
    networks:
      - bloomiq-network

  # Python Inference Service
  python-service:
    build:
      context: ./backend/python-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend/models:/app/../models
      - ./backend/python-service/temp_uploads:/app/temp_uploads
    restart: unless-stopped
    networks:
      - bloomiq-network

  # Web Frontend (Optional - for serving static build)
  web:
    image: nginx:alpine
    ports:
      - "3000:80"
    volumes:
      - ./web/build:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - bloomiq-network

networks:
  bloomiq-network:
    driver: bridge

volumes:
  uploads:
  models:
